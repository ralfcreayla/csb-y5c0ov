{"version":3,"sources":["AddMarker.jsx","Map.jsx","App.js","index.js"],"names":["AddMarker","useState","coord","setPosition","useMapEvents","click","e","latlng","useEffect","console","log","map","pos","idx","Marker","position","draggable","eventHandlers","Popup","onClick","prevCoord","filter","JSON","stringify","removeMarker","Map","MapContainer","center","zoom","style","height","TileLayer","attribution","url","App","L","prototype","options","icon","iconUrl","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mTAGe,SAASA,IACtB,MAA6BC,mBAAS,IAAG,mBAAlCC,EAAK,KAAEC,EAAW,KAEzBC,YAAa,CACXC,MAAO,SAACC,GACNH,EAAY,GAAD,mBAAKD,GAAK,CAAEI,EAAEC,SAC3B,IAGFC,qBAAU,WACRC,QAAQC,IAAIR,EACd,GAAG,CAACA,IAQJ,OACE,8BACGA,EAAMS,KAAI,SAACC,EAAKC,GAAG,OAClB,cAACC,EAAA,EAAM,CAELC,SAAUH,EACVI,WAAW,EACXC,cAAe,CACbZ,MAAO,SAACC,GACNG,QAAQC,IAAIJ,EAAEC,OAChB,GACA,SAEF,cAACW,EAAA,EAAK,UACJ,wBAAQC,QAAS,kBApBN,SAACP,GACpBT,GAAY,SAACiB,GAAS,OACpBA,EAAUC,QAAO,SAACnB,GAAK,OAAKoB,KAAKC,UAAUrB,KAAWoB,KAAKC,UAAUX,EAAI,GAAC,GAE9E,CAgBiCY,CAAaZ,EAAI,EAAC,8BACnC,iBAXOC,GAYR,KAIjB,CChCe,SAASY,IAGtB,OACE,eAACC,EAAA,EAAY,CAACC,OAHC,CAAC,QAAS,KAGOC,KAAM,GAAIC,MAAO,CAAEC,OAAQ,SAAU,UACnE,cAACC,EAAA,EAAS,CACRC,YAAY,yEACZC,IAAI,uDAEN,cAACjC,EAAS,MAGhB,CCnBe,SAASkC,IACtB,OAAO,cAACT,EAAG,GACb,CDCAU,IAAErB,OAAOsB,UAAUC,QAAQC,KAAOH,IAAEG,KAAK,CACvCC,QAAS,gEEFX,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAACV,EAAG,MAENM,E","file":"static/js/main.47b4cb3f.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Marker, Popup, useMapEvents } from \"react-leaflet\";\n\nexport default function AddMarker() {\n  const [coord, setPosition] = useState([]);\n\n  useMapEvents({\n    click: (e) => {\n      setPosition([...coord, e.latlng]);\n    }\n  });\n\n  useEffect(() => {\n    console.log(coord);\n  }, [coord]);\n\n  const removeMarker = (pos) => {\n    setPosition((prevCoord) =>\n      prevCoord.filter((coord) => JSON.stringify(coord) !== JSON.stringify(pos))\n    );\n  };\n\n  return (\n    <div>\n      {coord.map((pos, idx) => (\n        <Marker\n          key={`marker-${idx}`}\n          position={pos}\n          draggable={true}\n          eventHandlers={{\n            click: (e) => {\n              console.log(e.latlng);\n            }\n          }}\n        >\n          <Popup>\n            <button onClick={() => removeMarker(pos)}>Remove marker</button>\n          </Popup>\n        </Marker>\n      ))}\n    </div>\n  );\n}\n","import { MapContainer, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\n\nimport AddMarker from \"./AddMarker\";\n\nL.Marker.prototype.options.icon = L.icon({\n  iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\"\n});\n\nexport default function Map() {\n  const position = [51.505, -0.09];\n\n  return (\n    <MapContainer center={position} zoom={13} style={{ height: \"100vh\" }}>\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <AddMarker />\n    </MapContainer>\n  );\n}\n","import \"./styles.css\";\nimport Map from \"./Map\";\n\nexport default function App() {\n  return <Map />;\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}